{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/Ueberschrift.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Ueberschrift() {\n  return (\n    <header>\n      <h1>Song Quiz</h1>\n    </header>\n  );\n} "],"names":[],"mappings":";;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC;sBAAG;;;;;;;;;;;AAGV","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/PunkteAnzeige.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface PunkteAnzeigeProps {\n  punkte: number[];\n}\n\nexport default function PunkteAnzeige({ punkte }: PunkteAnzeigeProps) {\n  return (\n    <div style={{ display: \"flex\", gap: \"2rem\", margin: \"1rem 0\" }}>\n      <div>Team 1: <b>{punkte[0]}</b> Punkte</div>\n      <div>Team 2: <b>{punkte[1]}</b> Punkte</div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAMe,SAAS,cAAc,EAAE,MAAM,EAAsB;IAClE,qBACE,8OAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,KAAK;YAAQ,QAAQ;QAAS;;0BAC3D,8OAAC;;oBAAI;kCAAQ,8OAAC;kCAAG,MAAM,CAAC,EAAE;;;;;;oBAAK;;;;;;;0BAC/B,8OAAC;;oBAAI;kCAAQ,8OAAC;kCAAG,MAAM,CAAC,EAAE;;;;;;oBAAK;;;;;;;;;;;;;AAGrC","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/SpotifyLogin.tsx"],"sourcesContent":["import React from \"react\";\n\nconst CLIENT_ID = \"68286e6fbf0048e083e3d2d53b18dc40\"; // Dein Spotify Client ID\nconst SCOPES = [\n  \"user-read-email\",\n  \"user-read-private\",\n  \"user-modify-playback-state\",\n  \"user-read-playback-state\",\n  \"playlist-read-private\",\n  \"playlist-read-collaborative\",\n];\n\nexport default function SpotifyLogin({ onToken }) {\n  const REDIRECT_URI =\n    typeof window !== \"undefined\" ? window.location.origin : \"\";\n\n  const handleLogin = () => {\n    const authUrl =\n      \"https://accounts.spotify.com/authorize?\" +\n      new URLSearchParams({\n        client_id: CLIENT_ID,\n        response_type: \"token\",\n        redirect_uri: REDIRECT_URI,\n        scope: SCOPES.join(\" \"),\n        show_dialog: true,\n      }).toString();\n    window.location.href = authUrl;\n  };\n\n  React.useEffect(() => {\n    // Token aus URL extrahieren\n    const hash = window.location.hash;\n    if (hash) {\n      const params = new URLSearchParams(hash.substring(1));\n      const token = params.get(\"access_token\");\n      if (token) {\n        window.location.hash = \"\";\n        onToken(token);\n      }\n    }\n  }, [onToken]);\n\n  return (\n    <div style={{ textAlign: \"center\", margin: \"2rem 0\" }}>\n      <button\n        onClick={handleLogin}\n        style={{\n          background: \"#1DB954\",\n          color: \"white\",\n          padding: \"1rem 2rem\",\n          border: \"none\",\n          borderRadius: 24,\n          fontSize: 18,\n          cursor: \"pointer\",\n        }}\n      >\n        Mit Spotify verbinden\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,YAAY,oCAAoC,yBAAyB;AAC/E,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS,aAAa,EAAE,OAAO,EAAE;IAC9C,MAAM,eACJ,6EAAyD;IAE3D,MAAM,cAAc;QAClB,MAAM,UACJ,4CACA,IAAI,gBAAgB;YAClB,WAAW;YACX,eAAe;YACf,cAAc;YACd,OAAO,OAAO,IAAI,CAAC;YACnB,aAAa;QACf,GAAG,QAAQ;QACb,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,4BAA4B;QAC5B,MAAM,OAAO,OAAO,QAAQ,CAAC,IAAI;QACjC,IAAI,MAAM;YACR,MAAM,SAAS,IAAI,gBAAgB,KAAK,SAAS,CAAC;YAClD,MAAM,QAAQ,OAAO,GAAG,CAAC;YACzB,IAAI,OAAO;gBACT,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB,QAAQ;YACV;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,qBACE,8OAAC;QAAI,OAAO;YAAE,WAAW;YAAU,QAAQ;QAAS;kBAClD,cAAA,8OAAC;YACC,SAAS;YACT,OAAO;gBACL,YAAY;gBACZ,OAAO;gBACP,SAAS;gBACT,QAAQ;gBACR,cAAc;gBACd,UAAU;gBACV,QAAQ;YACV;sBACD;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/DeviceSelector.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function DeviceSelector({ accessToken, onDeviceSelected }) {\n  const [devices, setDevices] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const fetchDevices = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const res = await fetch(\"https://api.spotify.com/v1/me/player/devices\", {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      });\n      const data = await res.json();\n      setDevices(data.devices || []);\n    } catch (e) {\n      setError(\"Fehler beim Laden der Geräte.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (accessToken) fetchDevices();\n  }, [accessToken]);\n\n  return (\n    <div style={{ margin: \"1rem 0\" }}>\n      <button onClick={fetchDevices} disabled={loading}>\n        Geräte aktualisieren\n      </button>\n      {loading && <span> Lädt...</span>}\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n      <select onChange={e => onDeviceSelected(e.target.value)} style={{ marginLeft: 16 }}>\n        <option value=\"\">Gerät wählen</option>\n        {devices.map(device => (\n          <option key={device.id} value={device.id}>\n            {device.name} {device.is_active ? \"(Aktiv)\" : \"\"}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,eAAe,EAAE,WAAW,EAAE,gBAAgB,EAAE;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAEzC,MAAM,eAAe;QACnB,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,gDAAgD;gBACtE,SAAS;oBAAE,eAAe,CAAC,OAAO,EAAE,aAAa;gBAAC;YACpD;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,WAAW,KAAK,OAAO,IAAI,EAAE;QAC/B,EAAE,OAAO,GAAG;YACV,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,IAAI,aAAa;IACnB,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC;QAAI,OAAO;YAAE,QAAQ;QAAS;;0BAC7B,8OAAC;gBAAO,SAAS;gBAAc,UAAU;0BAAS;;;;;;YAGjD,yBAAW,8OAAC;0BAAK;;;;;;YACjB,uBAAS,8OAAC;gBAAI,OAAO;oBAAE,OAAO;gBAAM;0BAAI;;;;;;0BACzC,8OAAC;gBAAO,UAAU,CAAA,IAAK,iBAAiB,EAAE,MAAM,CAAC,KAAK;gBAAG,OAAO;oBAAE,YAAY;gBAAG;;kCAC/E,8OAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,QAAQ,GAAG,CAAC,CAAA,uBACX,8OAAC;4BAAuB,OAAO,OAAO,EAAE;;gCACrC,OAAO,IAAI;gCAAC;gCAAE,OAAO,SAAS,GAAG,YAAY;;2BADnC,OAAO,EAAE;;;;;;;;;;;;;;;;;AAOhC","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/PlaylistSelector.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function PlaylistSelector({ accessToken, onTracksLoaded }) {\n  const [playlists, setPlaylists] = React.useState([]);\n  const [selected, setSelected] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [customInput, setCustomInput] = React.useState(\"\");\n  const [customTracks, setCustomTracks] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!accessToken) return;\n    const fetchPlaylists = async () => {\n      setLoading(true);\n      setError(\"\");\n      let all = [];\n      let url = \"https://api.spotify.com/v1/me/playlists?limit=50\";\n      try {\n        while (url) {\n          const res = await fetch(url, {\n            headers: { Authorization: `Bearer ${accessToken}` }\n          });\n          const data = await res.json();\n          all = all.concat(data.items);\n          url = data.next;\n        }\n        setPlaylists(all);\n      } catch (e) {\n        setError(\"Fehler beim Laden der Playlists.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlaylists();\n  }, [accessToken]);\n\n  const handleSelect = (id) => {\n    setSelected(sel => sel.includes(id) ? sel.filter(x => x !== id) : [...sel, id]);\n  };\n\n  const handleLoadTracks = async () => {\n    setLoading(true);\n    setError(\"\");\n    let allTracks = [];\n    try {\n      for (const pid of selected) {\n        let url = `https://api.spotify.com/v1/playlists/${pid}/tracks?market=from_token&limit=100`;\n        while (url) {\n          const res = await fetch(url, {\n            headers: { Authorization: `Bearer ${accessToken}` }\n          });\n          const data = await res.json();\n          const validTracks = data.items\n            .filter(item => item.track?.id && !item.track.is_local)\n            .map(item => ({\n              id: item.track.id,\n              name: item.track.name,\n              artists: item.track.artists.map(a => a.name).join(\", \"),\n              albumCover: item.track.album.images[0]?.url || \"https://via.placeholder.com/100\",\n              releaseYear: item.track.album.release_date?.substring(0, 4) || \"Unbekannt\",\n              uri: item.track.uri\n            }));\n          allTracks = allTracks.concat(validTracks);\n          url = data.next;\n        }\n      }\n      allTracks = allTracks.concat(customTracks);\n      onTracksLoaded(allTracks);\n    } catch (e) {\n      setError(\"Fehler beim Laden der Tracks.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Öffentliche Playlist laden\n  const handleAddCustom = async () => {\n    setLoading(true);\n    setError(\"\");\n    let playlistId = \"\";\n    // Extrahiere Playlist-ID aus URL oder ID\n    const urlMatch = customInput.match(/playlist[/:]([a-zA-Z0-9]{22})/);\n    if (urlMatch) playlistId = urlMatch[1];\n    else if (/^[a-zA-Z0-9]{22}$/.test(customInput)) playlistId = customInput;\n    else {\n      setError(\"Ungültige Playlist-URL oder ID.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      let url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?market=from_token&limit=100`;\n      let tracks = [];\n      while (url) {\n        const res = await fetch(url, {\n          headers: { Authorization: `Bearer ${accessToken}` }\n        });\n        const data = await res.json();\n        const validTracks = data.items\n          .filter(item => item.track?.id && !item.track.is_local)\n          .map(item => ({\n            id: item.track.id,\n            name: item.track.name,\n            artists: item.track.artists.map(a => a.name).join(\", \"),\n            albumCover: item.track.album.images[0]?.url || \"https://via.placeholder.com/100\",\n            releaseYear: item.track.album.release_date?.substring(0, 4) || \"Unbekannt\",\n            uri: item.track.uri\n          }));\n        tracks = tracks.concat(validTracks);\n        url = data.next;\n      }\n      setCustomTracks(prev => prev.concat(tracks));\n      setCustomInput(\"\");\n      setError(\"\");\n    } catch (e) {\n      setError(\"Fehler beim Laden der öffentlichen Playlist.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ margin: \"2rem 0\" }}>\n      <h3>Wähle eine oder mehrere Playlists</h3>\n      {loading && <div>Lädt...</div>}\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n      <div style={{ maxHeight: 300, overflowY: \"auto\", border: \"1px solid #ddd\", borderRadius: 5, padding: 10, background: \"#fff\" }}>\n        {playlists.map(pl => (\n          <label key={pl.id} style={{ display: \"flex\", alignItems: \"center\", marginBottom: 8, cursor: \"pointer\" }}>\n            <input type=\"checkbox\" checked={selected.includes(pl.id)} onChange={() => handleSelect(pl.id)} />\n            <img src={pl.images[0]?.url || \"https://via.placeholder.com/40\"} alt=\"cover\" style={{ width: 40, height: 40, borderRadius: 3, marginRight: 10 }} />\n            <span style={{ flexGrow: 1 }}>{pl.name}</span>\n            <span style={{ color: \"#888\", fontSize: 14, marginLeft: 10 }}>{pl.tracks.total} Songs</span>\n          </label>\n        ))}\n      </div>\n      <div style={{ margin: \"16px 0\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Öffentliche Playlist-URL oder ID einfügen\"\n          value={customInput}\n          onChange={e => setCustomInput(e.target.value)}\n          style={{ width: 320, maxWidth: \"100%\", marginRight: 8 }}\n        />\n        <button onClick={handleAddCustom} disabled={!customInput || loading} type=\"button\">Hinzufügen</button>\n      </div>\n      {customTracks.length > 0 && <div style={{ color: \"#1DB954\", marginBottom: 8 }}>{customTracks.length} Tracks aus öffentlichen Playlists hinzugefügt</div>}\n      <button onClick={handleLoadTracks} disabled={(selected.length === 0 && customTracks.length === 0) || loading} style={{ marginTop: 16 }}>\n        Tracks laden\n      </button>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/SongHistory.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface SongMeta {\n  id: string;\n  uri: string;\n  name: string;\n  artists: string | { name: string }[];\n  releaseYear: string;\n  albumCover?: string;\n  [key: string]: any;\n}\n\ninterface SongHistoryProps {\n  songs: SongMeta[];\n}\n\nexport default function SongHistory({ songs }: SongHistoryProps) {\n  if (!songs.length) return null;\n  return (\n    <div style={{ margin: \"2rem 0\" }}>\n      <h3>Bisher gespielte Songs</h3>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"1rem\" }}>\n        {songs.map((song, idx) => (\n          <div key={song.id || idx} style={{ border: \"1px solid #ccc\", borderRadius: 8, padding: 12, minWidth: 120, textAlign: \"center\", background: \"#f9f9f9\" }}>\n            <img src={song.albumCover} alt=\"cover\" style={{ width: 60, borderRadius: 4, marginBottom: 6 }} />\n            <div style={{ fontWeight: \"bold\" }}>{song.name}</div>\n            <div>{typeof song.artists === \"string\" ? song.artists : song.artists.map(a => a.name).join(\", \")}</div>\n            <div style={{ fontSize: 12, color: \"#888\" }}>{song.releaseYear}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAgBe,SAAS,YAAY,EAAE,KAAK,EAAoB;IAC7D,IAAI,CAAC,MAAM,MAAM,EAAE,OAAO;IAC1B,qBACE,8OAAC;QAAI,OAAO;YAAE,QAAQ;QAAS;;0BAC7B,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,UAAU;oBAAQ,KAAK;gBAAO;0BAC1D,MAAM,GAAG,CAAC,CAAC,MAAM,oBAChB,8OAAC;wBAAyB,OAAO;4BAAE,QAAQ;4BAAkB,cAAc;4BAAG,SAAS;4BAAI,UAAU;4BAAK,WAAW;4BAAU,YAAY;wBAAU;;0CACnJ,8OAAC;gCAAI,KAAK,KAAK,UAAU;gCAAE,KAAI;gCAAQ,OAAO;oCAAE,OAAO;oCAAI,cAAc;oCAAG,cAAc;gCAAE;;;;;;0CAC5F,8OAAC;gCAAI,OAAO;oCAAE,YAAY;gCAAO;0CAAI,KAAK,IAAI;;;;;;0CAC9C,8OAAC;0CAAK,OAAO,KAAK,OAAO,KAAK,WAAW,KAAK,OAAO,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;0CAC3F,8OAAC;gCAAI,OAAO;oCAAE,UAAU;oCAAI,OAAO;gCAAO;0CAAI,KAAK,WAAW;;;;;;;uBAJtD,KAAK,EAAE,IAAI;;;;;;;;;;;;;;;;AAU/B","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/TeamGuessPanel.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface TeamGuess {\n  artist: string;\n  song: string;\n}\n\ninterface Guesses {\n  team1: TeamGuess;\n  team2: TeamGuess;\n}\n\ninterface TeamGuessPanelProps {\n  onSubmit: (guesses: Guesses) => void;\n}\n\nexport default function TeamGuessPanel({ onSubmit }: TeamGuessPanelProps) {\n  const [guesses, setGuesses] = useState<Guesses>({\n    team1: { artist: \"\", song: \"\" },\n    team2: { artist: \"\", song: \"\" }\n  });\n\n  const handleChange = (team: keyof Guesses, field: keyof TeamGuess, value: string) => {\n    setGuesses(g => ({\n      ...g,\n      [team]: { ...g[team], [field]: value }\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(guesses);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", gap: 32, justifyContent: \"center\", margin: \"2rem 0\" }}>\n      {[1, 2].map(team => (\n        <div key={team} style={{ background: \"#fff\", borderRadius: 10, boxShadow: \"0 2px 10px #eee\", padding: 20, minWidth: 220 }}>\n          <h3>Team {team}</h3>\n          <div style={{ marginBottom: 10 }}>\n            <label>Künstler:<br />\n              <input type=\"text\" value={guesses[`team${team}` as keyof Guesses].artist} onChange={e => handleChange(`team${team}` as keyof Guesses, \"artist\", e.target.value)} required />\n            </label>\n          </div>\n          <div style={{ marginBottom: 10 }}>\n            <label>Songtitel:<br />\n              <input type=\"text\" value={guesses[`team${team}` as keyof Guesses].song} onChange={e => handleChange(`team${team}` as keyof Guesses, \"song\", e.target.value)} required />\n            </label>\n          </div>\n        </div>\n      ))}\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <button type=\"submit\" style={{ height: 50, fontSize: 18 }}>Tipps abgeben</button>\n      </div>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAgBe,SAAS,eAAe,EAAE,QAAQ,EAAuB;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;QAC9C,OAAO;YAAE,QAAQ;YAAI,MAAM;QAAG;QAC9B,OAAO;YAAE,QAAQ;YAAI,MAAM;QAAG;IAChC;IAEA,MAAM,eAAe,CAAC,MAAqB,OAAwB;QACjE,WAAW,CAAA,IAAK,CAAC;gBACf,GAAG,CAAC;gBACJ,CAAC,KAAK,EAAE;oBAAE,GAAG,CAAC,CAAC,KAAK;oBAAE,CAAC,MAAM,EAAE;gBAAM;YACvC,CAAC;IACH;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS;IACX;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,OAAO;YAAE,SAAS;YAAQ,KAAK;YAAI,gBAAgB;YAAU,QAAQ;QAAS;;YACzG;gBAAC;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAA,qBACV,8OAAC;oBAAe,OAAO;wBAAE,YAAY;wBAAQ,cAAc;wBAAI,WAAW;wBAAmB,SAAS;wBAAI,UAAU;oBAAI;;sCACtH,8OAAC;;gCAAG;gCAAM;;;;;;;sCACV,8OAAC;4BAAI,OAAO;gCAAE,cAAc;4BAAG;sCAC7B,cAAA,8OAAC;;oCAAM;kDAAS,8OAAC;;;;;kDACf,8OAAC;wCAAM,MAAK;wCAAO,OAAO,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,CAAkB,CAAC,MAAM;wCAAE,UAAU,CAAA,IAAK,aAAa,CAAC,IAAI,EAAE,MAAM,EAAmB,UAAU,EAAE,MAAM,CAAC,KAAK;wCAAG,QAAQ;;;;;;;;;;;;;;;;;sCAG7K,8OAAC;4BAAI,OAAO;gCAAE,cAAc;4BAAG;sCAC7B,cAAA,8OAAC;;oCAAM;kDAAU,8OAAC;;;;;kDAChB,8OAAC;wCAAM,MAAK;wCAAO,OAAO,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,CAAkB,CAAC,IAAI;wCAAE,UAAU,CAAA,IAAK,aAAa,CAAC,IAAI,EAAE,MAAM,EAAmB,QAAQ,EAAE,MAAM,CAAC,KAAK;wCAAG,QAAQ;;;;;;;;;;;;;;;;;;mBATjK;;;;;0BAcZ,8OAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,YAAY;gBAAS;0BAClD,cAAA,8OAAC;oBAAO,MAAK;oBAAS,OAAO;wBAAE,QAAQ;wBAAI,UAAU;oBAAG;8BAAG;;;;;;;;;;;;;;;;;AAInE","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/RoundResult.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface SongMeta {\n  id: string;\n  uri: string;\n  name: string;\n  artists: string | { name: string }[];\n  releaseYear: string;\n  albumCover?: string;\n  [key: string]: any;\n}\n\ninterface TeamGuess {\n  artist: string;\n  song: string;\n}\n\ninterface Guesses {\n  team1: TeamGuess;\n  team2: TeamGuess;\n}\n\ninterface RoundResultProps {\n  songMeta: SongMeta | null;\n  guesses: Guesses | null;\n  onNextRound: () => void;\n  punkte: number[];\n  setPunkte: (punkte: number[]) => void;\n}\n\nfunction normalize(str: string) {\n  return (str || \"\")\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .trim();\n}\n\nexport default function RoundResult({ songMeta, guesses, onNextRound, punkte, setPunkte }: RoundResultProps) {\n  if (!songMeta || !guesses) return null;\n\n  // Vergleich\n  const results = [1, 2].map(team => {\n    const guess = guesses[`team${team}` as keyof Guesses];\n    const artistCorrect = guess.artist && (normalize(typeof songMeta.artists === \"string\" ? songMeta.artists : songMeta.artists.map(a => a.name).join(\", \")).includes(normalize(guess.artist)) || normalize(guess.artist).includes(normalize(typeof songMeta.artists === \"string\" ? songMeta.artists : songMeta.artists.map(a => a.name).join(\", \"))));\n    const songCorrect = guess.song && (normalize(songMeta.name).includes(normalize(guess.song)) || normalize(guess.song).includes(normalize(songMeta.name)));\n    const points = (artistCorrect ? 1 : 0) + (songCorrect ? 1 : 0);\n    return { artistCorrect, songCorrect, points, guess };\n  });\n\n  // Punkte aktualisieren\n  React.useEffect(() => {\n    if (punkte && setPunkte) {\n      setPunkte([\n        punkte[0] + results[0].points,\n        punkte[1] + results[1].points\n      ]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div style={{ margin: \"2rem 0\", background: \"#f1f1f1\", borderRadius: 8, padding: 24 }}>\n      <h2>Runden-Ergebnis</h2>\n      <div style={{ display: \"flex\", gap: 32, justifyContent: \"center\" }}>\n        <div>\n          <b>Richtige Lösung:</b>\n          <div><img src={songMeta.albumCover} alt=\"Cover\" style={{ width: 80, borderRadius: 6, margin: \"8px 0\" }} /></div>\n          <div><b>{typeof songMeta.artists === \"string\" ? songMeta.artists : songMeta.artists.map(a => a.name).join(\", \")}</b> – <b>{songMeta.name}</b></div>\n        </div>\n        {[1, 2].map((team, i) => (\n          <div key={team} style={{ minWidth: 180 }}>\n            <b>Team {team}</b>\n            <div>Künstler: <span className={results[i].artistCorrect ? \"correct\" : \"incorrect\"}>{results[i].guess.artist || \"-\"}</span></div>\n            <div>Song: <span className={results[i].songCorrect ? \"correct\" : \"incorrect\"}>{results[i].guess.song || \"-\"}</span></div>\n            <div><b>Punkte: {results[i].points}</b></div>\n          </div>\n        ))}\n      </div>\n      <div style={{ textAlign: \"center\", marginTop: 24 }}>\n        <button onClick={onNextRound}>Nächste Runde</button>\n      </div>\n      <style>{`.correct{color:#1DB954;font-weight:bold}.incorrect{color:#ff6347}`}</style>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/components/YearSortPanel.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface SongMeta {\n  id: string;\n  uri: string;\n  name: string;\n  artists: string | { name: string }[];\n  releaseYear: string;\n  albumCover?: string;\n  [key: string]: any;\n}\n\ninterface SortAnswers {\n  team1: number;\n  team2: number;\n}\n\ninterface YearSortPanelProps {\n  songHistory: SongMeta[];\n  currentSong: SongMeta;\n  onSubmit: (answers: SortAnswers, sortedHistory: SongMeta[]) => void;\n}\n\nexport default function YearSortPanel({ songHistory, currentSong, onSubmit }: YearSortPanelProps) {\n  const [answers, setAnswers] = useState<SortAnswers>({ team1: 0, team2: 0 });\n\n  if (!songHistory.length || !currentSong) return null;\n\n  // Sortiere die History nach Jahr\n  const sorted = [...songHistory].sort((a, b) => parseInt(a.releaseYear) - parseInt(b.releaseYear));\n\n  // Erzeuge die Einfüge-Positionen (zwischen jedem Song und an den Enden)\n  const positions: { idx: number; label: string }[] = [];\n  for (let i = 0; i <= sorted.length; i++) {\n    let label = \"\";\n    if (i === 0) {\n      label = `Vor allen (${sorted[0].name})`;\n    } else if (i === sorted.length) {\n      label = `Nach allen (${sorted[sorted.length - 1].name})`;\n    } else {\n      label = `Zwischen (${sorted[i - 1].name}) und (${sorted[i].name})`;\n    }\n    positions.push({ idx: i, label });\n  }\n\n  const handleChange = (team: keyof SortAnswers, value: string) => {\n    setAnswers(a => ({ ...a, [team]: parseInt(value) }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(answers, sorted);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", gap: 32, justifyContent: \"center\", margin: \"2rem 0\" }}>\n      {[1, 2].map(team => (\n        <div key={team} style={{ background: \"#fff\", borderRadius: 10, boxShadow: \"0 2px 10px #eee\", padding: 20, minWidth: 260 }}>\n          <h3>Team {team}</h3>\n          <div style={{ marginBottom: 10 }}>\n            <div>Wo würdet ihr <b>{currentSong.name}</b> in die bisherige Reihenfolge einsortieren?</div>\n            <select value={answers[`team${team}` as keyof SortAnswers]} onChange={e => handleChange(`team${team}` as keyof SortAnswers, e.target.value)} required style={{ marginTop: 10, width: \"100%\" }}>\n              {positions.map(pos => (\n                <option key={pos.idx} value={pos.idx}>{pos.label}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      ))}\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <button type=\"submit\" style={{ height: 50, fontSize: 18 }}>Antworten abgeben</button>\n      </div>\n    </form>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAuBe,SAAS,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAsB;IAC9F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QAAE,OAAO;QAAG,OAAO;IAAE;IAEzE,IAAI,CAAC,YAAY,MAAM,IAAI,CAAC,aAAa,OAAO;IAEhD,iCAAiC;IACjC,MAAM,SAAS;WAAI;KAAY,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,SAAS,EAAE,WAAW,IAAI,SAAS,EAAE,WAAW;IAE/F,wEAAwE;IACxE,MAAM,YAA8C,EAAE;IACtD,IAAK,IAAI,IAAI,GAAG,KAAK,OAAO,MAAM,EAAE,IAAK;QACvC,IAAI,QAAQ;QACZ,IAAI,MAAM,GAAG;YACX,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QACzC,OAAO,IAAI,MAAM,OAAO,MAAM,EAAE;YAC9B,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,OAAO;YACL,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QACpE;QACA,UAAU,IAAI,CAAC;YAAE,KAAK;YAAG;QAAM;IACjC;IAEA,MAAM,eAAe,CAAC,MAAyB;QAC7C,WAAW,CAAA,IAAK,CAAC;gBAAE,GAAG,CAAC;gBAAE,CAAC,KAAK,EAAE,SAAS;YAAO,CAAC;IACpD;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS,SAAS;IACpB;IAEA,qBACE,8OAAC;QAAK,UAAU;QAAc,OAAO;YAAE,SAAS;YAAQ,KAAK;YAAI,gBAAgB;YAAU,QAAQ;QAAS;;YACzG;gBAAC;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAA,qBACV,8OAAC;oBAAe,OAAO;wBAAE,YAAY;wBAAQ,cAAc;wBAAI,WAAW;wBAAmB,SAAS;wBAAI,UAAU;oBAAI;;sCACtH,8OAAC;;gCAAG;gCAAM;;;;;;;sCACV,8OAAC;4BAAI,OAAO;gCAAE,cAAc;4BAAG;;8CAC7B,8OAAC;;wCAAI;sDAAc,8OAAC;sDAAG,YAAY,IAAI;;;;;;wCAAK;;;;;;;8CAC5C,8OAAC;oCAAO,OAAO,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,CAAsB;oCAAE,UAAU,CAAA,IAAK,aAAa,CAAC,IAAI,EAAE,MAAM,EAAuB,EAAE,MAAM,CAAC,KAAK;oCAAG,QAAQ;oCAAC,OAAO;wCAAE,WAAW;wCAAI,OAAO;oCAAO;8CACzL,UAAU,GAAG,CAAC,CAAA,oBACb,8OAAC;4CAAqB,OAAO,IAAI,GAAG;sDAAG,IAAI,KAAK;2CAAnC,IAAI,GAAG;;;;;;;;;;;;;;;;;mBANlB;;;;;0BAYZ,8OAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,YAAY;gBAAS;0BAClD,cAAA,8OAAC;oBAAO,MAAK;oBAAS,OAAO;wBAAE,QAAQ;wBAAI,UAAU;oBAAG;8BAAG;;;;;;;;;;;;;;;;;AAInE","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Ueberschrift from \"../components/Ueberschrift\";\nimport PunkteAnzeige from \"../components/PunkteAnzeige\";\nimport SpotifyLogin from \"../components/SpotifyLogin\";\nimport DeviceSelector from \"../components/DeviceSelector\";\nimport PlaylistSelector from \"../components/PlaylistSelector\";\nimport SongHistory from \"../components/SongHistory\";\nimport TeamGuessPanel from \"../components/TeamGuessPanel\";\nimport RoundResult from \"../components/RoundResult\";\nimport YearSortPanel from \"../components/YearSortPanel\";\n\n// Typdefinitionen für Song, Guess, usw.\ninterface SongMeta {\n  id: string;\n  uri: string;\n  name: string;\n  artists: { name: string }[];\n  releaseYear: string;\n  [key: string]: any; // für weitere Felder\n}\n\ninterface Guess {\n  [team: string]: number | string;\n}\n\ninterface SortAnswers {\n  [team: string]: number;\n}\n\nfunction Home() {\n  const [accessToken, setAccessToken] = useState<string | null>(null);\n  const [deviceId, setDeviceId] = useState<string>(\"\");\n  const [songMeta, setSongMeta] = useState<SongMeta | null>(null);\n  const [guesses, setGuesses] = useState<Guess | null>(null);\n  const [punkte, setPunkte] = useState<number[]>([0, 0]);\n  const [showResult, setShowResult] = useState<boolean>(false);\n  const [trackPool, setTrackPool] = useState<SongMeta[]>([]);\n  const [songHistory, setSongHistory] = useState<SongMeta[]>([]);\n  const [showSortPanel, setShowSortPanel] = useState<boolean>(false);\n  const [sortAnswers, setSortAnswers] = useState<SortAnswers | null>(null);\n  const [sortFeedback, setSortFeedback] = useState<string>(\"\");\n\n  const handleTracksLoaded = (tracks: SongMeta[]) => {\n    setTrackPool(tracks);\n    setSongMeta(null);\n    setGuesses(null);\n    setShowResult(false);\n    setSongHistory([]);\n    setShowSortPanel(false);\n    setSortAnswers(null);\n    setSortFeedback(\"\");\n  };\n\n  const handleSongLoaded = (meta: SongMeta) => {\n    setSongMeta(meta);\n    setGuesses(null);\n    setShowResult(false);\n    setShowSortPanel(false);\n    setSortAnswers(null);\n    setSortFeedback(\"\");\n  };\n\n  const handleGuesses = (g: Guess) => {\n    setGuesses(g);\n    if (songHistory.length > 0) {\n      setShowSortPanel(true);\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  const handleSortSubmit = (\n    answers: SortAnswers,\n    sortedHistory: SongMeta[]\n  ) => {\n    setSortAnswers(answers);\n    const currentYear = parseInt(songMeta!.releaseYear);\n    let correctIdx = 0;\n    while (\n      correctIdx < sortedHistory.length &&\n      parseInt(sortedHistory[correctIdx].releaseYear) < currentYear\n    ) {\n      correctIdx++;\n    }\n    let punkteNeu = [...punkte];\n    let feedback: string[] = [];\n    [1, 2].forEach((team, i) => {\n      if (answers[`team${team}`] === correctIdx) {\n        punkteNeu[i] += 1;\n        feedback.push(\n          `Team ${team} erhält 1 Punkt für die richtige Einsortierung!`\n        );\n      }\n    });\n    setPunkte(punkteNeu);\n    setSortFeedback(feedback.join(\" \"));\n    setShowResult(true);\n    setShowSortPanel(false);\n  };\n\n  const handleNextRound = () => {\n    setSongHistory((h) => [...h, songMeta!]);\n    setSongMeta(null);\n    setGuesses(null);\n    setShowResult(false);\n    setShowSortPanel(false);\n    setSortAnswers(null);\n    setSortFeedback(\"\");\n  };\n\n  const playRandomFromPool = async () => {\n    if (!trackPool.length) return;\n    const unused = trackPool.filter(\n      (t) => !songHistory.some((s) => s.id === t.id)\n    );\n    if (!unused.length) return alert(\"Alle Songs wurden gespielt!\");\n    const randomTrack = unused[Math.floor(Math.random() * unused.length)];\n    await fetch(\n      `https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ uris: [randomTrack.uri] }),\n      }\n    );\n    setSongMeta(randomTrack);\n    setGuesses(null);\n    setShowResult(false);\n    setShowSortPanel(false);\n    setSortAnswers(null);\n    setSortFeedback(\"\");\n  };\n\n  return (\n    <div\n      className=\"App\"\n      style={{ maxWidth: 900, margin: \"0 auto\", padding: 24 }}\n    >\n      <Ueberschrift />\n      <PunkteAnzeige punkte={punkte} />\n      <SongHistory songs={songHistory} />\n      {!accessToken && <SpotifyLogin onToken={setAccessToken} />}\n      {accessToken && !deviceId && (\n        <DeviceSelector\n          accessToken={accessToken}\n          onDeviceSelected={setDeviceId}\n        />\n      )}\n      {accessToken && deviceId && !trackPool.length && (\n        <PlaylistSelector\n          accessToken={accessToken}\n          onTracksLoaded={handleTracksLoaded}\n        />\n      )}\n      {accessToken && deviceId && trackPool.length > 0 && !songMeta && (\n        <div style={{ margin: \"1rem 0\" }}>\n          <button onClick={playRandomFromPool}>\n            Zufälligen Song aus Playlist abspielen\n          </button>\n        </div>\n      )}\n      {songMeta && !showResult && !showSortPanel && (\n        <TeamGuessPanel onSubmit={handleGuesses} />\n      )}\n      {songMeta && showSortPanel && songHistory.length > 0 && (\n        <YearSortPanel\n          songHistory={songHistory}\n          currentSong={songMeta}\n          onSubmit={handleSortSubmit}\n        />\n      )}\n      {songMeta && showResult && (\n        <>\n          {sortFeedback && (\n            <div\n              style={{ color: \"#1DB954\", fontWeight: \"bold\", margin: \"1rem 0\" }}\n            >\n              {sortFeedback}\n            </div>\n          )}\n          <RoundResult\n            songMeta={songMeta}\n            guesses={guesses}\n            onNextRound={handleNextRound}\n            punkte={punkte}\n            setPunkte={setPunkte}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;;AAgCA,SAAS;IACP,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IACrD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAAC;QAAG;KAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IACnE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEzD,MAAM,qBAAqB,CAAC;QAC1B,aAAa;QACb,YAAY;QACZ,WAAW;QACX,cAAc;QACd,eAAe,EAAE;QACjB,iBAAiB;QACjB,eAAe;QACf,gBAAgB;IAClB;IAEA,MAAM,mBAAmB,CAAC;QACxB,YAAY;QACZ,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,eAAe;QACf,gBAAgB;IAClB;IAEA,MAAM,gBAAgB,CAAC;QACrB,WAAW;QACX,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,iBAAiB;QACnB,OAAO;YACL,cAAc;QAChB;IACF;IAEA,MAAM,mBAAmB,CACvB,SACA;QAEA,eAAe;QACf,MAAM,cAAc,SAAS,SAAU,WAAW;QAClD,IAAI,aAAa;QACjB,MACE,aAAa,cAAc,MAAM,IACjC,SAAS,aAAa,CAAC,WAAW,CAAC,WAAW,IAAI,YAClD;YACA;QACF;QACA,IAAI,YAAY;eAAI;SAAO;QAC3B,IAAI,WAAqB,EAAE;QAC3B;YAAC;YAAG;SAAE,CAAC,OAAO,CAAC,CAAC,MAAM;YACpB,IAAI,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,YAAY;gBACzC,SAAS,CAAC,EAAE,IAAI;gBAChB,SAAS,IAAI,CACX,CAAC,KAAK,EAAE,KAAK,+CAA+C,CAAC;YAEjE;QACF;QACA,UAAU;QACV,gBAAgB,SAAS,IAAI,CAAC;QAC9B,cAAc;QACd,iBAAiB;IACnB;IAEA,MAAM,kBAAkB;QACtB,eAAe,CAAC,IAAM;mBAAI;gBAAG;aAAU;QACvC,YAAY;QACZ,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,eAAe;QACf,gBAAgB;IAClB;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,UAAU,MAAM,EAAE;QACvB,MAAM,SAAS,UAAU,MAAM,CAC7B,CAAC,IAAM,CAAC,YAAY,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,EAAE,EAAE;QAE/C,IAAI,CAAC,OAAO,MAAM,EAAE,OAAO,MAAM;QACjC,MAAM,cAAc,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,MAAM,EAAE;QACrE,MAAM,MACJ,CAAC,oDAAoD,EAAE,UAAU,EACjE;YACE,QAAQ;YACR,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,aAAa;gBACtC,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,MAAM;oBAAC,YAAY,GAAG;iBAAC;YAAC;QACjD;QAEF,YAAY;QACZ,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,eAAe;QACf,gBAAgB;IAClB;IAEA,qBACE,8OAAC;QACC,WAAU;QACV,OAAO;YAAE,UAAU;YAAK,QAAQ;YAAU,SAAS;QAAG;;0BAEtD,8OAAC,kIAAA,CAAA,UAAY;;;;;0BACb,8OAAC,mIAAA,CAAA,UAAa;gBAAC,QAAQ;;;;;;0BACvB,8OAAC,iIAAA,CAAA,UAAW;gBAAC,OAAO;;;;;;YACnB,CAAC,6BAAe,8OAAC,kIAAA,CAAA,UAAY;gBAAC,SAAS;;;;;;YACvC,eAAe,CAAC,0BACf,8OAAC,oIAAA,CAAA,UAAc;gBACb,aAAa;gBACb,kBAAkB;;;;;;YAGrB,eAAe,YAAY,CAAC,UAAU,MAAM,kBAC3C,8OAAC,sIAAA,CAAA,UAAgB;gBACf,aAAa;gBACb,gBAAgB;;;;;;YAGnB,eAAe,YAAY,UAAU,MAAM,GAAG,KAAK,CAAC,0BACnD,8OAAC;gBAAI,OAAO;oBAAE,QAAQ;gBAAS;0BAC7B,cAAA,8OAAC;oBAAO,SAAS;8BAAoB;;;;;;;;;;;YAKxC,YAAY,CAAC,cAAc,CAAC,+BAC3B,8OAAC,oIAAA,CAAA,UAAc;gBAAC,UAAU;;;;;;YAE3B,YAAY,iBAAiB,YAAY,MAAM,GAAG,mBACjD,8OAAC,mIAAA,CAAA,UAAa;gBACZ,aAAa;gBACb,aAAa;gBACb,UAAU;;;;;;YAGb,YAAY,4BACX;;oBACG,8BACC,8OAAC;wBACC,OAAO;4BAAE,OAAO;4BAAW,YAAY;4BAAQ,QAAQ;wBAAS;kCAE/D;;;;;;kCAGL,8OAAC,iIAAA,CAAA,UAAW;wBACV,UAAU;wBACV,SAAS;wBACT,aAAa;wBACb,QAAQ;wBACR,WAAW;;;;;;;;;;;;;;AAMvB;uCAEe","debugId":null}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1536, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":["file:///Users/emilyhenningsen/Documents/song-quiz/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}